import pandas as pd
import numpy as np

records2 = [3.839, 3.855, 3.86, 3.866, 3.882, 3.907, 3.878, 3.878, 3.857, 3.84, 3.839, 3.869, 3.861, 3.841, 3.885, 3.861, 3.862, 3.879, 3.944, 3.974, 3.952, 3.918, 3.928, 3.941, 3.932, 3.92, 3.951, 3.948, 3.947, 3.94, 3.931, 3.95, 3.979, 4.006, 4.011, 4.024, 4.011, 4, 3.961, 3.951, 3.952, 3.969, 3.972, 3.964, 3.96, 3.938, 3.957, 3.937, 3.922, 3.935, 3.917, 3.941, 3.935, 3.949, 3.948, 3.966, 3.991, 3.985, 3.999, 4.076, 4.021, 4.032, 4.036, 4.028, 4.026, 4.039, 4.028, 3.998, 3.961, 3.96, 3.968, 3.944, 3.967, 3.953, 3.965, 3.938, 3.92, 3.92, 3.921, 3.906, 3.894, 3.886, 3.878, 3.857, 3.85, 3.85, 3.846, 3.867, 3.846, 3.882, 3.87, 3.841, 3.818, 3.854, 3.846, 3.828, 3.84, 3.826, 3.823, 3.826, 3.838, 3.861, 3.865, 3.868, 3.881, 3.879, 3.873, 3.881, 3.889, 3.908, 3.901, 3.876, 3.872, 3.874, 3.882, 3.878, 3.884, 3.893, 3.923, 3.923, 3.926, 3.93, 3.926, 3.946, 3.947, 3.928, 3.939, 3.937, 3.884, 3.883, 3.879, 3.871, 3.879, 3.889, 3.891, 3.897, 3.895, 3.871, 3.88, 3.852, 3.885, 3.852, 3.902, 3.916, 3.933, 3.882, 3.873, 3.887, 3.855, 3.866, 3.871, 3.871, 3.873, 3.857, 3.854, 3.856, 3.818, 3.843, 3.833, 3.835, 3.827, 3.818, 3.815, 3.785, 3.832, 3.801, 3.831, 3.805, 3.819, 3.813, 3.806, 3.773, 3.759, 3.782, 3.82, 3.828, 3.825, 3.838, 3.827, 3.811, 3.844, 3.863, 3.877, 3.854, 3.875, 3.863, 3.876, 3.896, 3.865, 3.877, 3.874, 3.89, 3.86, 3.859, 3.869, 3.902, 3.911, 3.905, 3.919, 3.92, 3.937, 3.926, 3.937, 3.942, 3.943, 3.942, 3.966, 3.958, 4, 3.982, 3.979, 3.996, 3.986, 4.006, 3.998, 3.955, 3.986, 3.974, 3.939, 3.886, 3.873, 3.895, 3.844, 3.824, 3.826, 3.841, 3.845, 3.901, 3.907, 4.136, 4.054, 4.094, 4.147, 4.262, 4.249, 4.201, 4.315, 4.341, 4.332, 4.342, 4.323, 4.29, 4.257, 4.207, 4.169, 4.16, 4.176, 4.147, 4.145, 4.168, 4.101, 4.156, 4.171, 4.194, 4.174, 4.188, 4.198, 4.208, 4.267, 4.245, 4.247, 4.24, 4.193, 4.198, 4.168, 4.179, 4.14, 4.184, 4.208, 4.23, 4.211, 4.148, 4.156, 4.218, 4.21, 4.207, 4.235, 4.165, 4.191, 4.179, 4.17, 4.201, 4.196, 4.195, 4.259, 4.238, 4.243, 4.233, 4.294, 4.309, 4.245, 4.225, 4.113, 4.174, 4.211, 4.156, 4.139, 4.159, 4.184, 4.194]


def calculate_moving_average(length, records):
    moving_average = pd.Series(records).rolling(window=length).mean().iloc[length - 1:].values
    moving_average = np.insert(moving_average, 0, [0] * (length - 1))
    return moving_average


def decision(length_short, length_long, records):
    meaning_records = records[-length_long:]
    mean_short = calculate_moving_average(length_short, meaning_records)  # policzenie krótkiej średniej
    mean_long = calculate_moving_average(length_long, meaning_records)  # policzenie długiej średniej
    return mean_short[-1] > mean_long[-1]


if __name__ == '__main__':
    decision(20, 200, records2)